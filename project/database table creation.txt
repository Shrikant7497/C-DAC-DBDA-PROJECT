import csv
import io
import requests #for calling API 
import time
import boto3
s3=boto3.client('s3')

def youtube_api():
    API_key='AIzaSyCuZpWk-54qGjKBlv-xrN0FC8CbDQUs1EM'
    channel_id='UCeVMnSShP_Iviwkknt83cww'
    pageToken = ""
    
    video_info=[]
    channel_info=[]
    
    def get_video_info():
        url = "https://www.googleapis.com/youtube/v3/search?key="+API_key+"&channelId="+channel_id+"&part=snippet,id&order=date&maxResults=10000&"+pageToken
        global response
        response = requests.get(url).json()
    
    get_video_info()
    
    def get_channel_info_2():
         url3='https://www.googleapis.com/youtube/v3/channels?id='+channel_id+'&part=statistics&key='+API_key
         response_channel_stats=requests.get(url3).json()
         subscriber_count=response_channel_stats['items'][0]['statistics']['subscriberCount']
         video_count=response_channel_stats['items'][0]['statistics']['videoCount']
         channel_title=response['items'][0]['snippet']['channelTitle']
         data2={'channel_id':channel_id,'channel_title':channel_title,'subscriber_count':subscriber_count,'video_count':video_count}
         channel_info.append(data2)
         
    get_channel_info_2()
  
    while 1:
        get_video_info()
        time.sleep(1)
        for video in response['items']:
            if video['id']['kind']=='youtube#video':
                video_id=video['id']['videoId']
                video_title=video['snippet']['title']
                video_title=str(video_title).replace('&amp;','')
                upload_date=video['snippet']['publishedAt']
                upload_date=str(upload_date).split('T')[0]
    
                url2='https://www.googleapis.com/youtube/v3/videos?id='+video_id+'&part=statistics&key='+API_key
                response_video_stats=requests.get(url2).json()
                view_count = response_video_stats['items'][0]['statistics']['viewCount']
                like_count = response_video_stats['items'][0]['statistics']['likeCount']
                #dislike_count = response_video_stats['items'][0]['statistics']['dislikeCount']
                comment_count = response_video_stats['items'][0]['statistics']['commentCount']
                data={'channel_id':channel_id,'video_id':video_id,'video_title':video_title,'upload_date':upload_date,'view_count':view_count,'like_count':like_count,'comment_count':comment_count}
                video_info.append(data)
                
        try:
            if response['nextPageToken'] != None: #if none, it means it reached the last page and break out of it
                pageToken = "pageToken=" + response['nextPageToken']
    
        except:
            break
    return video_info,channel_info
        
def data_to_s3(input,name):
    bucket='lambda-function-output'
    filename=name+'.csv'
    stream=io.StringIO()
    headers=list(input[0].keys())
    writer=csv.DictWriter(stream,fieldnames=headers)
    writer.writeheader()
    writer.writerows(input)
    upload=stream.getvalue()
    s3.put_object(Bucket=bucket,Key=filename,Body=upload)
    print("succeed_to_s3")
    client=boto3.client('lambda',region_name='us-east-1')

def lambda_handler(event, context):
    video_info,channel_info=youtube_api()
    data_to_s3(video_info,'video_info') #passing data and filename
    data_to_s3(channel_info,'channel_info')
    return "succeed"

 